
// <div class="slider">
//     <a href="#" class="slider__control slider__control--prev">
//      <span class="slider__control__label">previous</span>
//     </a>
//   <div class="slider__container">
//    <div class="slider__content">
//      ...
//    </div>
//   </div>
//     <a href="#" class="slider__control slider__control--next">
//      <span class="slider__control__label">next</span>
//     </a>
// </div>

@mixin slider-control-gradient($direction:right,$color:$colors-pure-black) {
 // background: linear-gradient(to $direction, rgba($color, 0), rgba($color, 1) 80%);
 background: none; // temporarily removing gradients until further discussion
}

.slider {
  position: relative;
  min-height: 150px;
}

.slider.slider--grid {
  .slider__container {
    position: relative;
    overflow: auto;
  }

  .slider__content {
    width: auto;
  }
}


.slider--inline .slider__container{
  // previously this was working without need for position absolute.. but at moment it seems to need it.
  // this solves the issue where slider content is visible to the right, but now the controls
  // are not properly centered, because height of overall component collapses to min-height above.
  position: absolute;
  overflow: hidden;
  left:0;
  right:0;
}

.slider--inline .slider__content {
  position: relative;
  top: 0;
  left: 0;
  // an arbitrary but high number is needed
  width: 999999px;

  @include transition(left $transition-duration unquote($transition-easing));
}

.slider__control {
  position: absolute;
  right: 0;
  height: 100%;
  width: 40px;
  z-index: 5;
  @include slider-control-gradient();

  &--prev {
    left: -$size-s;
    @include slider-control-gradient(left);
  }

  @include from-medium {
    width: 100px;

    &--prev {
      left: -#{$size-xl};
    }
    &--next {
      right: -#{$size-xl};
    }
  }
}

.slider__control__label {
	@include icon('next','large');
  position: absolute;
  top: 50%;
  left: $size-s;
  margin-top: (0-($size-xl/2));
  @include hide-text;

  @include from-medium {
    left: auto;
    right: 0;
  }

  .slider__control--prev & {
    @include icon('prev','large');
    @include from-medium {
      left: 0;
    }
  }
}

.slider__items {
  @include unstyled-ul;
  margin: 0 $size-l;
  padding:0;
  width: 100%;
  @include display('flex');

  @include from-medium {
    margin: 0;
  }
}

.slider__item {
  min-width: $size-xxl;
  margin-right: $size-l;
  vertical-align: text-top;

  @include from-medium {
    margin-right: $size-m;

    &:last-child {
      margin-right: 0;
    }
  }
  
  @include from-large {
    margin-right: $size-l;

    &:last-child {
      margin-right: 0;
    }
  }
  
  @include from-extra-large {
    margin-right: $size-xs + $size-l;

    &:last-child {
      margin-right: 0;
    }
  }
}

.slider--grid {
  height: auto;
}

.slider--inline .promo {
  margin-bottom: 0;
}

// variants
.slider--season {
  min-height: 0;
  height: 172px;

  @include from-medium {
    height: 252px;
  }

  .slider__item {
    width: 172px;

    @include from-medium {
      width: 448px;
    }
  }
}

.slider--cast {
  margin-bottom: 120px;
  min-height: 0;
  height: 172px;

  .slider__item {
    width: 172px;
  }
}

.slider--portrait {
  min-height: 0;
  height: 225px;

  @include from-medium {
    height: 369px;
  }

  .slider__item {
    width: 150px;

    @include from-medium {
      width: 246px;
    }
  }
}


.slider--dark-grey .slider__control {
  @include slider-control-gradient(right,$colors-dark-grey);

  &--prev {
    @include slider-control-gradient(left,$colors-dark-grey);
  }
}

.slider--no-shaders .slider__control {
  background: none;
}

.slider--from-square {
  @include until-medium {
    height: 225px;

    .slider__item {
      width: 225px;
    }
  }
}

.slider--square.slider--inline {
  height: 225px;

  .slider__item {
    width: 225px;
  }

  @include from-medium {
    height: 320px;

    .slider__item {
      width: 320px;
    }
  }
}
